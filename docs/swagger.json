{
    "swagger": "2.0",
    "info": {
        "description": "API for auth service",
        "title": "Auth Service API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3100",
    "basePath": "/",
    "paths": {
        "/categories": {
            "get": {
                "description": "Retrieves a list of all categories.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get all categories",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all categories",
                        "schema": {
                            "$ref": "#/definitions/response.CategoriesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new category. Requires admin role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Create a new category",
                "parameters": [
                    {
                        "description": "Category data to create. ID, CreatedAt, UpdatedAt will be ignored.",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Category"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "schema": {
                            "$ref": "#/definitions/response.IDResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (token is missing or invalid)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "403": {
                        "description": "Forbidden (user is not an admin)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "description": "Retrieves a specific category by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get a category by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved category",
                        "schema": {
                            "$ref": "#/definitions/response.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid category ID",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "500": {
                        "description": "Failed to get category",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a category by its ID. Requires admin privileges.",
                "tags": [
                    "categories"
                ],
                "summary": "Delete a category",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully"
                    },
                    "400": {
                        "description": "Invalid category ID",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (token is missing or invalid)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "403": {
                        "description": "Forbidden (user is not an admin)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "500": {
                        "description": "Failed to delete category",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a category's title and/or description by its ID. Requires admin privileges.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Update a category",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category update data",
                        "name": "category_update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateRequestCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category updated successfully"
                    },
                    "400": {
                        "description": "Invalid category ID or request payload",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (token is missing or invalid)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "403": {
                        "description": "Forbidden (user is not an admin)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "500": {
                        "description": "Failed to update category",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    }
                }
            }
        },
        "/categories/{id}/topics": {
            "get": {
                "description": "Retrieves a list of topics for a category ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "topics"
                ],
                "summary": "Get topics by category ID",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved topics",
                        "schema": {
                            "$ref": "#/definitions/response.TopicsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid category ID",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new topic in a category. Requires authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "topics"
                ],
                "summary": "Create a new topic",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Category ID to create topic in",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Topic data to create. ID, AuthorID, CategoryID, CreatedAt, UpdatedAt will be ignored or overridden.",
                        "name": "topic",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Topic"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Topic created successfully",
                        "schema": {
                            "$ref": "#/definitions/response.IDResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid category ID or request payload",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (token is missing or invalid)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "403": {
                        "description": "Forbidden (user is not authorized or trying to impersonate)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticates a user and returns user information along with a new access token. A new refresh token is set as an HTTP-only cookie, and any existing refresh token in the cookie is invalidated.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log in an existing user",
                "parameters": [
                    {
                        "description": "User Login Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged in",
                        "schema": {
                            "$ref": "#/definitions/response.LoginSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseAuth"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseAuth"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Logs out a user by deleting the refresh token from the server and clearing the refresh token cookie.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log out a user",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "schema": {
                            "$ref": "#/definitions/response.LogoutSuccessResponse"
                        }
                    }
                }
            }
        },
        "/posts/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a post by its ID. Requires authentication and ownership or admin role.",
                "tags": [
                    "posts"
                ],
                "summary": "Delete a post",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid post ID",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (token is missing or invalid)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "403": {
                        "description": "Forbidden (user is not an owner or admin)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a post. Requires authentication and ownership or admin role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Update a post",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Post update data (only content)",
                        "name": "post_update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateRequestPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post updated successfully",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid post ID or request payload",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (token is missing or invalid)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "403": {
                        "description": "Forbidden (user is not an owner or admin)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "description": "Uses a refresh token to generate a new access token and a new refresh token. Refresh token is set as an HTTP-only cookie.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh access token",
                "responses": {
                    "200": {
                        "description": "Successfully refreshed tokens",
                        "schema": {
                            "$ref": "#/definitions/response.RefreshSuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Refresh token required or invalid/expired refresh token",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseAuth"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Creates a new user account and returns user information along with an access token. A refresh token is set as an HTTP-only cookie.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User Credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully registered",
                        "schema": {
                            "$ref": "#/definitions/response.RegisterSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseAuth"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseAuth"
                        }
                    }
                }
            }
        },
        "/topics/{id}": {
            "get": {
                "description": "Retrieves a specific topic by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "topics"
                ],
                "summary": "Get a topic by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Topic ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved topic",
                        "schema": {
                            "$ref": "#/definitions/response.TopicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid topic ID",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "500": {
                        "description": "Failed to get topic",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a topic by its ID. Requires authentication and ownership or role.",
                "tags": [
                    "topics"
                ],
                "summary": "Delete a topic",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Topic ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Topic deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid topic ID",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (token is missing or invalid)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "403": {
                        "description": "Forbidden (user is not an owner or admin)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "404": {
                        "description": "Topic not found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a topic. Requires authentication and ownership or admin role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "topics"
                ],
                "summary": "Update a topic",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Topic ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Topic update data (only title)",
                        "name": "topic_update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateRequestTopic"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Topic updated successfully",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid topic ID or request payload",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (token is missing or invalid)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "403": {
                        "description": "Forbidden (user is not an owner or admin)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "404": {
                        "description": "Topic not found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    }
                }
            }
        },
        "/topics/{id}/posts": {
            "get": {
                "description": "Retrieves a list of posts for a topic ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get posts by topic ID",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Topic ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved posts",
                        "schema": {
                            "$ref": "#/definitions/response.PostsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid topic ID",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "404": {
                        "description": "Topic not found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseForum"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Category": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Post": {
            "type": "object",
            "properties": {
                "author_id": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "reply_to": {
                    "type": "integer"
                },
                "topic_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entity.Topic": {
            "type": "object",
            "properties": {
                "author_id": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.RegisterRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.UpdateRequestCategory": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "request.UpdateRequestPost": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "request.UpdateRequestTopic": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                }
            }
        },
        "response.CategoriesResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Category"
                    }
                }
            }
        },
        "response.CategoryResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/entity.Category"
                }
            }
        },
        "response.ErrorResponseAuth": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "error message"
                }
            }
        },
        "response.ErrorResponseForum": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "error message"
                }
            }
        },
        "response.IDResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 123
                }
            }
        },
        "response.LoginSuccessResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                }
            }
        },
        "response.LogoutSuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "logged out successfully"
                }
            }
        },
        "response.PostsResponse": {
            "type": "object",
            "properties": {
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Post"
                    }
                }
            }
        },
        "response.RefreshSuccessResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "response.RegisterSuccessResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                }
            }
        },
        "response.SuccessMessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "operation was successful"
                }
            }
        },
        "response.TopicResponse": {
            "type": "object",
            "properties": {
                "topic": {
                    "$ref": "#/definitions/entity.Topic"
                }
            }
        },
        "response.TopicsResponse": {
            "type": "object",
            "properties": {
                "topics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Topic"
                    }
                }
            }
        }
    }
}